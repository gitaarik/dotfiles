#!/bin/bash

type git > /dev/null 2>&1 || {
    echo >&2 "Please install git. On Ubuntu: sudo apt install -y git)";
    exit 1;
}

type pip > /dev/null 2>&1 || {
    echo >&2 "Please install pip. On Ubuntu: sudo apt install -y python-pip";
    exit 1;
}

if [ ! -e $(python -c 'from distutils.sysconfig import get_makefile_filename as m; print m()') ]; then
    echo "Please install Python development files. On Ubuntu: apt install python-dev";
    exit 1;
fi

type powerline > /dev/null 2>&1 || {
    echo >&2 "Please install Powerline (required for Tmux and Vim): pip install -y powerline-status"
    echo >&2 "More info: https://powerline.readthedocs.org/en/latest/installation.html";
    exit 1;
}

type wget > /dev/null 2>&1 || {
    echo >&2 "Please install wget (required for this script).";
    exit 1;
}

type ctags > /dev/null 2>&1 || {
    echo >&2 "Please install ctags (required for Vim -> easytags). On Ubuntu: sudo apt install -y exuberant-ctags";
    exit 1;
}

type cmake > /dev/null 2>&1 || {
    echo >&2 "Please install cmake (required for Vim -> YouCompleteMe). On Ubuntu: sudo apt install -y cmake";
    exit 1;
}

# On some systems the `site-packages` dir is called `dist-packages`. In
# that case, make a symlink from `site-packages` to `dist-packages`
cd /usr/local/lib/python2.7/
if [ -d dist-packages ]; then
    ln -s dist-packages site-packages
fi

cd ~
mkdir -p bin/
cd bin/
wget https://gist.githubusercontent.com/gitaarik/6103330/raw/git_bash_prompt.sh
mv git_bash_prompt.sh gitprompt
chmod +x gitprompt

cd ~/dev/
mkdir -p .bash_plugins/
cd .bash_plugins/

cd ~/dev/
mkdir -p dev/
cd dev/

echo
echo "bash"
echo "-------------------------"
cd ~/dev/
if [ ! -d bash ]; then
    git clone git@github.com:gitaarik/bash.git
fi
cd bash 
git pull
./init

echo
echo "sshconfig"
echo "-------------------------"
cd ~/dev/
if [ ! -d bash ]; then
    git clone git@bitbucket.org:gitaarik/sshconfig.git
fi
cd sshconfig
git pull
./init

echo
echo "gitconfig"
echo "-------------------------"
cd ~/dev/
if [ ! -d gitconfig ]; then
    git clone git@github.com:gitaarik/gitconfig.git
fi
cd gitconfig
git pull
./init

echo
echo "vimrc"
echo "-------------------------"
cd ~/dev/
if [ ! -d vimrc ]; then
    git clone git@github.com:gitaarik/vimrc.git
fi
cd vimrc
git pull
git submodule update --init --recursive
./init

echo
echo "tmuxconf"
echo "-------------------------"
cd ~/dev/
if [ ! -d tmuxconf ]; then
    git clone git@github.com:gitaarik/tmuxconf.git
fi
cd tmuxconf
git pull
git submodule update --init --recursive
./init

echo
echo "screenrc"
echo "-------------------------"
cd ~/dev/
if [ ! -d screenrc ]; then
    git clone git@github.com:gitaarik/screenrc.git
fi
cd screenrc
git pull
./init

echo
echo "markjump"
echo "-------------------------"
cd ~/dev/
if [ ! -d markjump ]; then
    git clone git@github.com:gitaarik/markjump.git
fi
cd markjump
git pull
./init

echo
echo "pip-bash"
echo "-------------------------"
cd ~/dev/
if [ ! -d pip-bash ]; then
    git clone git@github.com:gitaarik/pip-bash.git
fi
cd pip-bash
git pull
./init

echo
echo "weather"
echo "-------------------------"
cd ~/dev/
if [ ! -d weather-cli ]; then
    git clone git@github.com:gitaarik/weather-cli.git
fi
cd weather-cli
git pull
./init

echo
echo ".agignore"
echo "-------------------------"
cd ~
echo 'node_modules/' > .agignore

if [[ $OSTYPE == darwin* ]]; then

    cd ~/dev/
    if [ ! -d homebrew-bash ]; then
        git clone git@github.com:gitaarik/homebrew-bash.git
    fi
    cd homebrew-bash
    ./init

    cd ~

    if [ ! -f ~/.bash_profile ] || grep -Fxq ". ~/.bashrc" ~/.bash_profile; then
        echo '. ~/.bashrc' > ~/.bash_profile
    fi

fi
